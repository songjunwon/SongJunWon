
DROP TABLE MEM_INFO;
DROP TABLE COMPET_INFO;
DROP TABLE COMPET_LIST;
DROP TABLE COM_QUARTER_CODE;
DROP TABLE FAQ;
DROP TABLE NOTICE;
DROP TABLE QNA;
DROP TABLE QNA_REPLY;
DROP TABLE GENRE_CATEGORY;
DROP TABLE WEB_NOV_INFO;
DROP TABLE WEB_NOV_DETAIL;
DROP TABLE WEB_NOV_REPLY;
DROP TABLE NOV_INFO;
DROP TABLE NOV_REVIEW;
DROP TABLE COIN;
DROP TABLE COIN_CHARGE;
DROP TABLE COIN_USE_HIS;
DROP TABLE WISH_LIST;
DROP TABLE SHOPPING_CART;
DROP TABLE BOOKSHELF;
DROP TABLE STOCK;
DROP TABLE ORDER;
DROP TABLE PAYMENT;


CREATE TABLE MEM_INFO
(
  MEM_NUM NUMBER PRIMARY KEY,
  MEM_NAME VARCHAR2(15) NOT NULL,
  MEM_ID VARCHAR2(12) NOT NULL UNIQUE,
  MEM_PWD VARCHAR2(12) NOT NULL,
  MEM_EMAIL VARCHAR2(320) NOT NULL,
  MEM_ADDRESS VARCHAR2(320) NOT NULL,
  MEM_BIRTHDATE DATE NOT NULL UNIQUE,
  MEM_LOGIN_COUNT NUMBER DEFAULT 0,
  MEM_COIN NUMBER DEFAULT 0,
  MEM_CAN_VOTE_YN CHAR(2) DEFAULT 'Y' CHECK ( MEM_CAN_VOTE_YN IN ('Y','N') ),
  MEM_WITHDRAW_YN CHAR(2) DEFAULT 'Y' CHECK ( MEM_WITHDRAW_YN IN ('Y','N') ),
  MEM_WITHDRAW_DATE DATE,
  MEM_CLASS VARCHAR2(10) DEFAULT '회원' CHECK (MEM_CLASS IN ('회원', '관리자')),
  MEM_CLASS_CODE VARCHAR2(4) NOT NULL,
  MEM_BLOCK_YN CHAR(2) DEFAULT 'N' CHECK (MEM_BLOCK_YN IN ('Y', 'N')),
  MEM_BLOCK_DATE DATE,
  MEM_ENROLL_DATE DATE NOT NULL
)
;


CREATE TABLE COMPET_INFO
(
  COMPETE_NUM NUMBER PRIMARY KEY,
  MEM_NUM NUMBER NOT NULL REFERENCES MEM_INFO(MEM_NUM),
  COMPET_PAPER_YN CHAR(2) DEFAULT 'Y' CHECK (COMPET_PAPER_YN IN ('Y','N') ),
  NOV_TITLE VARCHAR2(20) NOT NULL,
  NOV_INFO VARCHAR2(2000) NOT NULL,
  COMPET_SSN NUMBER NOT NULL,
  COMPET_NOV_IMG_LOCATION VARCHAR2(200),
  SCORE NUMBER DEFAULT 0,
  COMPET_ACT_YN DEFAULT 'Y' CHECK (COMPET_ACT_YN IN ('Y','N') )
)
;


CREATE TABLE COMPET_LIST
(
  CHAPTER_NUM NUMBER,
  COMPET_NUM NUMBER NOT NULL REFERENCES COMPET_INFO(COMPETE_NUM),
  NOV_CONTENT VARCHAR2(1000) NOT NULL,
  CONSTRAINT COMPET_LIST PRIMARY KEY (CHAPTER_NUM, COMPET_NUM)
)
;


CREATE TABLE COM_QUARTER_CODE
(
  QUARTER_CODE NUMBER PRIMARY KEY,
  COM_START_DATE DATE NOT NULL UNIQUE,
  COM_END_DATE DATE NOT NULL UNIQUE
)
;

CREATE TABLE FAQ
(
  POST_NUM NUMBER PRIMARY KEY,
  SITE_MANAGE_CODE VARCHAR2(300),
  FAQ_POST_TITLE VARCHAR2(400)
);


CREATE TABLE NOTICE
(
  NOTICE_NUM NUMBER PRIMARY KEY,
  NOTICE_DATE DATE,
  NOTICE_NAME VARCHAR2(40),
  NOTICE_VIEW_COUNT NUMBER DEFAULT 0 NOT NULL,
  NOTICE_CONTENT VARCHAR2(2000)
)
;

CREATE TABLE QNA
(
  POST_NUM NUMBER PRIMARY KEY,
  MEM_NUM NUMBER REFERENCES MEM_INFO(MEM_NUM),
  QNA_TITLE VARCHAR2(100) NOT NULL,
  QNA_OPEN_YN CHAR(2) DEFAULT 'Y' CHECK (QNA_OPEN_YN IN ('Y','N') ),
  QNA_REPLY_YN CHAR(2) DEFAULT 'N' CHECK (QNA_REPLY_YN IN ('Y','N') ),
  QNA_DATE DATE NOT NULL
)
;

CREATE TABLE QNA_REPLY
(
  REPLY_NUM NUMBER PRIMARY KEY,
  POST_NUM NUMBER REFERENCES QNA(POST_NUM),
  REPLY_DATE DATE NOT NULL,
  REPLY_ID VARCHAR2(12) NOT NULL,
  REPLY_CONTENT VARCHAR2(600) NOT NULL
);

CREATE TABLE GENRE_CATEGORY(
  CATEGORY_CODE VARCHAR2(5) PRIMARY KEY,
  CATEGORY_NAME VARCHAR2(15) CONSTRAINT NN_CATEGORY_NAME NOT NULL CONSTRAINT UK_CATEGORY_NAME UNIQUE
)
;



CREATE TABLE WEB_NOV_INFO
(
  WEB_NOV_NUM NUMBER PRIMARY KEY,
  CATEGORY_CODE VARCHAR2(5) REFERENCES GENRE_CATEGORY(CATEGORY_CODE),
  WEB_NOV_TITLE VARCHAR2(40) CONSTRAINT NN_WEB_NOV_TITLE NOT NULL,
  WEB_NOV_AUTHOR VARCHAR2(20) CONSTRAINT NN_WEB_NOV_AUTHOR NOT NULL,
  CHAP_PER_COIN NUMBER CONSTRAINT NN_CHAP_PER_COIN NOT NULL,
  WEB_NOV_PUBLISHER VARCHAR2(20) CONSTRAINT NN_WEB_NOV_PUBLISHER NOT NULL,
  WEB_NOV_INFORM VARCHAR2(1200) CONSTRAINT NN_WEB_NOV_INFORM NOT NULL,
  WEB_NOV_IMG_LOCATION VARCHAR2(100) CONSTRAINT NN_WEB_NOV_IMG_LOCATION NOT NULL,
  DAY_OF_WEEK VARCHAR2(3) CONSTRAINT CK_DAY_OF_WEEK CHECK(DAY_OF_WEEK IN ('MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN', 'NON')),
  WEB_NOV_OPEN_OR_NOT CHAR(2) DEFAULT 'Y' CONSTRAINT CK_WEB_NOV_OPEN_OR_CLOSE CHECK(WEB_NOV_OPEN_OR_NOT IN ('Y','N')) ,
  FINISHED_OR_NOT CHAR(2) DEFAULT 'N' CONSTRAINT CK_FINISHED_OR_NOT CHECK(FINISHED_OR_NOT IN('Y', 'N'))
)
;

ALTER TABLE WEB_NOV_INFO DROP CONSTRAINT CK_DAY_OF_WEEK;
ALTER TABLE WEB_NOV_INFO ADD CONSTRAINT CK_DAY_OF_WEEK CHECK(DAY_OF_WEEK IN ('MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT', 'SUN', 'NON'));
ALTER TABLE WEB_NOV_INFO MODIFY WEB_NOV_TITLE VARCHAR2(40);

CREATE TABLE WEB_NOV_DETAIL
(
  CHPATER_NUM NUMBER PRIMARY KEY,
  WEB_NOV_NUM NUMBER NOT NULL,
  PAY_OR_NOT CHAR(2) CONSTRAINT CK_PAY_OR_NOT CHECK(PAY_OR_NOT IN('Y', 'N')),
  WEB_NOV_CONTENT VARCHAR2(2000) CONSTRAINT NN_WEB_NOV_CONTENT NOT NULL
)
;

CREATE TABLE WEB_NOV_REPLY
(
  REPLY_NUM NUMBER PRIMARY KEY,
  WEB_NOV_NUM NUMBER REFERENCES WEB_NOV_INFO(WEB_NOV_NUM),
  REPLY_DATE DATE CONSTRAINT NN_REPLY_DATE NOT NULL,
  MEM_ID VARCHAR2(100) CONSTRAINT NN_MEM_ID NOT NULL,
  REPLY_CONTENT VARCHAR2(600) CONSTRAINT NN_REPLY_CONTENT NOT NULL
)
;

CREATE TABLE NOV_INFO
(
  NOV_NUM NUMBER PRIMARY KEY,
  CATEGORY_CODE VARCHAR2(5) REFERENCES GENRE_CATEGORY(CATEGORY_CODE),
  NOV_TITLE VARCHAR2(20) CONSTRAINT NOV_TITLE NOT NULL,
  NOV_AUTHOR VARCHAR2(20) CONSTRAINT NOV_AUTHOR NOT NULL,
  NOV_PRICE NUMBER CONSTRAINT NOV_PRICE NOT NULL,
  NOV_PUBLISHER VARCHAR2(20) CONSTRAINT NOV_PUBLISHER NOT NULL,
  NOV_INFORM VARCHAR2(1200) CONSTRAINT NOV_INFORM NOT NULL,
  NOV_IMG_LOCATION VARCHAR2(500) CONSTRAINT NOV_IMG_LOCATION NOT NULL,
  ORDERABLE_YN CHAR(2) DEFAULT 'Y' CONSTRAINT ORDERABLE_YN CHECK (ORDERABLE_YN IN('Y', 'N'))
);

CREATE TABLE STOCK(
  NOV_NUM NUMBER PRIMARY KEY REFERENCES NOV_INFO(NOV_NUM),
  NOV_STOCK_NUM NUMBER CONSTRAINT NN_NOV_STOCK_NUM NOT NULL
)
;

CREATE TABLE NOV_REVIEW(
  NOV_REVIEW_NUM NUMBER PRIMARY KEY,
  NOV_NUM NUMBER REFERENCES NOV_INFO(NOV_NUM),
  MEM_ID VARCHAR2(100) CONSTRAINT NN_MEM_ID2 NOT NULL,
  REVIEW_DATE DATE CONSTRAINT NN_REVIEW_DATE NOT NULL,
  NOV_CONTENT VARCHAR2(2000) CONSTRAINT NN_NOV_CONTENT NOT NULL
)
;


CREATE TABLE COIN
(
  COIN_NUM NUMBER PRIMARY KEY,
  MEM_NUM NUMBER REFERENCES MEM_INFO(MEM_NUM)
)
;

CREATE TABLE COIN_CHARGE
(
  COIN_NUM NUMBER PRIMARY KEY REFERENCES COIN(COIN_NUM),
  COIN_CHARGE_DATE DATE NOT NULL,
  COIN_CHARGE_COUNT NUMBER NOT NULL,
  COIN_CHARGE_TOTAL NUMBER,
  WEEKLY_COIN_YN CHAR(2) CHECK (WEEKLY_COIN_YN IN ('Y','N') )
)
;

CREATE TABLE COIN_USE_HIS
(
  COIN_NUM NUMBER PRIMARY KEY REFERENCES COIN(COIN_NUM),
  WEB_NOV_NUM NUMBER NOT NULL REFERENCES WEB_NOV_INFO(WEB_NOV_NUM),
  COIN_USE_DATE DATE NOT NULL,
  COIN_USAGE NUMBER NOT NULL,
  CHAPTER_NUM CHAR(2) NOT NULL
)
;

CREATE TABLE BOOKSHELF
(
  BOOKSHELF_NUM NUMBER PRIMARY KEY,
  WEB_NOV_NUM NUMBER NOT NULL REFERENCES WEB_NOV_INFO(WEB_NOV_NUM),
  MEM_NUM NUMBER NOT NULL REFERENCES MEM_INFO(MEM_NUM),
  CHAPTER_NUM NUMBER NOT NULL
)
;

CREATE TABLE WISH_LIST
(
  WEB_NOV_NUM NUMBER PRIMARY KEY REFERENCES WEB_NOV_INFO(WEB_NOV_NUM),
  MEM_NUM NUMBER NOT NULL REFERENCES MEM_INFO(MEM_NUM)
)
;

CREATE TABLE SHOPPING_CART
(
  NOV_NUM NUMBER PRIMARY KEY REFERENCES NOV_INFO(NOV_NUM),
  MEM_NUM NUMBER NOT NULL REFERENCES MEM_INFO(MEM_NUM),
  CART_COUNT NUMBER
)
;

CREATE TABLE ORDER
(
  ORDER_NUM NUMBER PRIMARY KEY,
  NOV_NUM NUMBER REFERENCES NOV_INFO(NOV_NUM),
  MEM_NUM NUMBER,
  ORDER_DATE DATE CONSTRAINT ORDER_DATE NOT NULL,
  ORDER_COUNT NUMBER CONSTRAINT ORDER_COUNT NOT NULL,
  ORDER_CANCEL_OR_NOT CHAR(5) DEFAULT 'N' CONSTRAINT ORDER_CANCEL_OR_NOT CHECK(ORDER_CANCEL_OR_NOT IN('Y', 'N'))
)
;

CREATE TABLE PAYMENT
(
  PAYMENT_NUM NUMBER PRIMARY KEY,
  ORDER_NUM NUMBER REFERENCES ORDER(ORDER_NUM),
  PAYMENT_DATE DATE CONSTRAINT PAYMENT_DATE NOT NULL,
  PAYMENT_PRICE NUMBER CONSTRAINT PAYMENT_PRICE NOT NULL,
  PAYMENT_TYPE VARCHAR2(500) CONSTRAINT PAYMENT_TYPE NOT NULL
)
;









-------------------insert
COMMIT;

INSERT INTO GENRE_CATEGORY
(
CATEGORY_CODE, CATEGORY_NAME
)
VALUES
(
'MF', '현대판타지'
)
;

INSERT INTO GENRE_CATEGORY
(
CATEGORY_CODE, CATEGORY_NAME
)
VALUES
(
'F', '판타지'
)
;

INSERT INTO GENRE_CATEGORY
(
CATEGORY_CODE, CATEGORY_NAME
)
VALUES
(
'OF', '무협'
)
;

INSERT INTO GENRE_CATEGORY
(
CATEGORY_CODE, CATEGORY_NAME
)
VALUES
(
'ROM', '로맨스'
)
;

INSERT INTO GENRE_CATEGORY
(
CATEGORY_CODE, CATEGORY_NAME
)
VALUES
(
'SPO', '스포츠'
)
;

INSERT INTO GENRE_CATEGORY
(
CATEGORY_CODE, CATEGORY_NAME
)
VALUES
(
'FH', '대체역사'
)
;

INSERT INTO MEM_INFO
(
 MEM_NUM, MEM_CLASS_CODE, MEM_NAME, MEM_ID, MEM_PWD, MEM_EMAIL, MEM_ADDRESS, MEM_BIRTHDATE, MEM_WITHDRAW_DATE, MEM_BLOCK_DATE, MEM_ENROLL_DATE
)
VALUES
(
 1, '관리자', 'master', 'master',
)
;

INSERT INTO WEB_NOV_INFO
(
 WEB_NOV_NUM, CATEGORY_CODE, WEB_NOV_TITLE, WEB_NOV_AUTHOR, CHAP_PER_COIN, WEB_NOV_PUBLISHER, WEB_NOV_INFORM,
 WEB_NOV_IMG_LOCATION, DAY_OF_WEEK, WEB_NOV_OPEN_OR_NOT, FINISHED_OR_NOT
)
VALUES
(
1, 'MF', '전지적 독자 시점', '싱숑', 4, '문피아', '오직 나만이, 이 세계의 결말을 알고 있다.', 'imglocation1', 'NON', 'Y', 'Y'
)
;

INSERT INTO WISH_LIST
(
 WEB_NOV_NUM, MEM_NUM
)
VALUES
(
 1,1
)
;
INSERT INTO WISH_LIST
(
 WEB_NOV_NUM, MEM_NUM
)
VALUES
(
 2,1
)
;




INSERT INTO MEM_INFO
(
 MEM_NUM, MEM_CLASS_CODE, MEM_NAME, MEM_ID, MEM_PWD, MEM_EMAIL, MEM_ADDRESS, MEM_BIRTHDATE, MEM_LOGIN_COUNT, MEM_COIN, MEM_CAN_VOTE_YN, MEM_WITHDRAW_YN, MEM_WITHDRAW_DATE, MEM_CLASS, MEM_BLOCK_YN, MEM_BLOCK_DATE, MEM_ENROLL_DATE
)
VALUES
(
 1, 'A1', '임창훈', 'hoony0203', '1234', 'hoony0203@naver.com', '서울시 송파구 올림픽로 435 파크리오 아파트', '890203', DEFAULT, DEFAULT
);

INSERT INTO MEM_INFO
(
 MEM_NUM, MEM_CLASS_CODE, MEM_NAME, MEM_ID, MEM_PWD, MEM_EMAIL, MEM_ADDRESS, MEM_BIRTHDATE, MEM_LOGIN_COUNT, MEM_COIN, MEM_CAN_VOTE_YN, MEM_WITHDRAW_YN, MEM_WITHDRAW_DATE, MEM_CLASS, MEM_BLOCK_YN, MEM_BLOCK_DATE, MEM_ENROLL_DATE
)
VALUES
(
 2, 'B2', '김독자', 'reader0123', '1234', 'reader0123@gmail.com', '서울시 관악구','123456-1234567', DEFAULT, DEFAULT
);

INSERT INTO MEM_INFO
(
 MEM_NUM, MEM_CLASS_CODE, MEM_NAME, MEM_ID, MEM_PWD, MEM_EMAIL, MEM_ADDRESS, MEM_BIRTHDATE, MEM_LOGIN_COUNT, MEM_COIN, MEM_CAN_VOTE_YN, MEM_WITHDRAW_YN, MEM_WITHDRAW_DATE, MEM_CLASS, MEM_BLOCK_YN, MEM_BLOCK_DATE, MEM_ENROLL_DATE
)
VALUES
(
 3, 'C4', '글쓰는기계', 'novmachine', '1234', 'novmachine@gmail.com', '서울시 서초구', '234567-1224567', DEFAULT, DEFAULT
);

INSERT INTO MEM_INFO
(
MEM_NUM, MEM_CLASS_CODE, MEM_NAME, MEM_ID, MEM_PWD, MEM_EMAIL, MEM_ADDRESS, MEM_BIRTHDATE, MEM_LOGIN_COUNT, MEM_COIN, MEM_CAN_VOTE_YN, MEM_WITHDRAW_YN, MEM_WITHDRAW_DATE, MEM_CLASS, MEM_BLOCK_YN, MEM_BLOCK_DATE, MEM_ENROLL_DATE
)
VALUES
(
 4, 'C4', '싱숑', 'singshown', '1234', 'singshown@gmail.com', '서울시 노원구', '345678-1231234', DEFAULT,DEFAULT
);

INSERT INTO MEM_INFO
(
MEM_NUM, MEM_CLASS_CODE, MEM_NAME, MEM_ID, MEM_PWD, MEM_EMAIL, MEM_ADDRESS, MEM_BIRTHDATE, MEM_LOGIN_COUNT, MEM_COIN, MEM_CAN_VOTE_YN, MEM_WITHDRAW_YN, MEM_WITHDRAW_DATE, MEM_CLASS, MEM_BLOCK_YN, MEM_BLOCK_DATE, MEM_ENROLL_DATE
)
VALUES
(
 5, 'C4', '이영도', 'LYD', '1234', 'LYD@gmail.com', '경기도 성남시', '948503-1603956', DEFAULT, DEFAULT
);

INSERT INTO MEM_INFO
(
MEM_NUM, MEM_CLASS_CODE, MEM_NAME, MEM_ID, MEM_PWD, MEM_EMAIL, MEM_ADDRESS, MEM_BIRTHDATE, MEM_LOGIN_COUNT, MEM_COIN, MEM_CAN_VOTE_YN, MEM_WITHDRAW_YN, MEM_WITHDRAW_DATE, MEM_CLASS, MEM_BLOCK_YN, MEM_BLOCK_DATE, MEM_ENROLL_DATE
)
VALUES
(
6, 'C3', '신인', 'newman', '1234', 'nm@gmail.com', '강원도 인제군 원통리', '492058-1093053', DEFAULT, DEFAULT
);




INSERT INTO WEB_NOV_INFO
(WEB_NOV_NUM, CATEGORY_CODE, WEB_NOV_TITLE, WEB_NOV_AUTHOR, CHAP_PER_COIN, WEB_NOV_PUBLISHER, WEB_NOV_INFORM, WEB_NOV_IMG_LOCATION, DAY_OF_WEEK, WEB_NOV_OPEN_OR_CLOSE, FINISHED_OR_NOT
)
VALUES
(1, 5, '드래곤라자', '이영도', 10000, '황금가지', '내가 바라보자, 별들은 나에게 빛을 주었다.'
);

INSERT INTO WEB_NOV_INFO
(WEB_NOV_NUM, CATEGORY_CODE, WEB_NOV_TITLE, WEB_NOV_AUTHOR, CHAP_PER_COIN, WEB_NOV_PUBLISHER, WEB_NOV_INFORM, WEB_NOV_IMG_LOCATION, DAY_OF_WEEK, WEB_NOV_OPEN_OR_CLOSE, FINISHED_OR_NOT
)
VALUES
(2, 4, '전독시', '싱숑', 20000, '문피아', '오직 나만이, 이 세계의 결말을 알고 있다.'
);

INSERT INTO GENRE_CATEGORY(
CATEGORY_CODE, CATEGORY_NAME
)
VALUES
('F1','현대판타지');

INSERT INTO GENRE_CATEGORY(
CATEGORY_CODE, CATEGORY_NAME
)
VALUES
('F2','판타지');






------------------------
SELECT
*
FROM NOV_CATEGORY NC
JOIN WEB_NOVEL WN ON(NC.CATEGORY_CODE = WN.CATEGORY_CODE)
JOIN WEB_NOV_INFO WNI ON (WN.WEB_NOV_NUM = WNI.WEB_NOV_NUM);

SELECT
WNI.WEB_NOV_NUM 웹소설번호
,MI.MEM_NAME 회원명
,WNI.AUTHOR_NAME 작가명
,WNI.NOV_NAME 소설명
,WNI.NOV_INFORM 소설정보
,WNI.PUBLISHER 출판사
,WN.DAY_OF_WEEK 요일
,NC.CATEGORY_NAME 카테고리명
FROM MEM_INFO MI
LEFT JOIN WEB_NOV_INFO WNI ON (MI.MEM_NUM = WNI.MEM_NUM)
JOIN WEB_NOVEL WN ON (WNI.WEB_NOV_NUM = WN.WEB_NOV_NUM)
JOIN NOV_CATEGORY NC ON(WN.CATEGORY_CODE = NC.CATEGORY_CODE)
WHERE MEM_CLASS_CODE = 'C4';

-----------------

